easyblock = 'MakeCp'

name = 'OpenSees'
version = '3.2.0'
_metis_version = '5.1.0'
homepage = 'http://opensees.berkeley.edu'
description = """Simulates the performance of structural and geotechnical systems subjected to earthquakes."""

toolchain = {'name': 'gimkl', 'version': '2020a'}
toolchainopts = {'pic': True}

source_urls = ['https://github.com/OpenSees/OpenSees/archive']
sources = ['v%(version)s.tar.gz']

dependencies = [
    ('Tcl', '8.6.10'),
    ('METIS', _metis_version),
    ('SuperLU', '5.2.1'),
    #('SuperLU_DIST', '6.3.1'),
    ('arpack-ng', '3.6.3'),
    #('SuiteSparse', '5.6.0', '-METIS-%s' % _metis_version),
    ('MUMPS', '5.3.1', '-METIS-%s' % _metis_version),
]

_MAKEFILE = 'OpenSees_EB_Makefile_gimkl_v7.def'
patches = [
    (_MAKEFILE, 'MAKES'), 
]

prebuildopts = 'rm -f Makefile.def && cp "MAKES/%s" ./Makefile.def && mkdir -p lib && mkdir -p bin && ' % _MAKEFILE

# With this? OpenSees version the 'PARALLEL_INTERPRETERS' mode (ie: OpenSeesMP) apparently still requires 
# the mumps.o hack from OpenSees_EB_Makefile_v4.def, but the more useful OpenSeesSP does not.
_MODES = ['PARALLEL_INTERPRETERS', 'PARALLEL', 'SEQUENTIAL']

_expected_executables = ['OpenSees' + {'SEQUENTIAL':'', 'PARALLEL_INTERPRETERS':'MP', 'PARALLEL':'SP'}[m] for m in _MODES]
buildopts = ['all HOME=`pwd` PROGRAMMING_MODE='+m for m in _MODES]

files_to_copy = [(["bin/*"], "bin"), "Makefile.def"]  # get repeatedly copied if len(_MODES)>1, so no dirs

sanity_check_paths = {
    'files': ['bin/'+f for f in _expected_executables],
    'dirs': ["."],
    }

parallel = 8

moduleclass = 'cae'
